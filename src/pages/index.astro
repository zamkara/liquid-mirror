---
import BaseHead from '../components/BaseHead.astro';
import Header from '../components/Header.astro';
import Footer from '../components/Footer.astro';
import { SITE_TITLE, SITE_DESCRIPTION } from '../consts';
---

<!doctype html>
<html lang="en">
  <head>
    <BaseHead title={SITE_TITLE} description={SITE_DESCRIPTION} />
  </head>
  <body class="bg-background text-foreground">
    <Header />
    <main class="px-4 py-10 max-w-5xl mx-auto">
      <div class="mb-10">
        <h1 class="text-3xl font-bold tracking-tight mb-2">ü™ê Liquid Kernel Mirror</h1>
        <p class="text-muted-foreground">Browse & download prebuilt Linux kernels for all major distros</p>
      </div>

      <div id="file-list">
        <p class="text-muted-foreground">‚è≥ Loading...</p>
      </div>
    </main>
    <Footer />

    <script type="module">
      async function loadFiles() {
        const container = document.getElementById("file-list");
        container.innerHTML = '<p class="text-muted-foreground">‚è≥ Loading...</p>';

        try {
          const res = await fetch("https://cors.zamkara.tech/?https://liquid.zamkara.tech/api/latest");
          if (!res.ok) throw new Error("Status: " + res.status);
          const files = await res.json();

          const versions = new Map();
          for (const file of files) {
            if (!versions.has(file.version)) versions.set(file.version, []);
            versions.get(file.version).push(file);
          }

          if (files.length === 0) {
            container.innerHTML = '<p class="text-red-500">‚ùå No data found.</p>';
            return;
          }

          let html = '';
          for (const [version, versionFiles] of versions.entries()) {
            const byExt = (ext) => versionFiles.filter(f => f.name.endsWith(ext));
            const deb = byExt('.deb');
            const rpm = byExt('.rpm');
            const arch = byExt('.pkg.tar.zst');
            const others = versionFiles.filter(f =>
              !f.name.endsWith('.deb') &&
              !f.name.endsWith('.rpm') &&
              !f.name.endsWith('.pkg.tar.zst')
            );

            const renderGroup = (title, list) => list.length === 0 ? '' : `
              <div class="mb-4">
                <h3 class="text-sm font-medium text-muted-foreground">${title}</h3>
                <ul class="list-disc ml-5 mt-2 space-y-1">
                  ${list.map(f => `
                    <li>
                      <a href="${f.url}" class="text-blue-600 hover:underline" download>
                        ${f.name} <span class="text-muted-foreground text-xs">(${f.size})</span>
                      </a>
                    </li>`).join('')}
                </ul>
              </div>`;

            html += `
              <div class="rounded-xl border bg-card text-card-foreground shadow p-6">
                <h2 class="text-lg font-semibold mb-2">${version}</h2>
                ${renderGroup('deb', deb)}
                ${renderGroup('rpm', rpm)}
                ${renderGroup('arch', arch)}
                ${renderGroup('others', others)}
              </div>`;
          }

          container.innerHTML = html;
        } catch (err) {
          console.error("Failed to fetch files:", err);
          container.innerHTML = '<p class="text-red-500">‚ùå Failed to load data. Please try again later.</p>';
        }
      }

      loadFiles();
    </script>
  </body>
</html>
